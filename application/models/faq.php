<?php defined('BASEPATH') OR exit('No direct script access allowed');
////////////////////////////////////////////////////////////////////////////////////////////////////////
/*	MODEL: CONTENT
 *	This model is responsible for the loading and storing of non-widgetized page content across all pages.
 *	For example, paragraph text, virtual arrays and images.
 */
////////////////////////////////////////////////////////////////////////////////////////////////////////
class Faq extends EXT_Model  {
	private $TABLE_FAQ			= "faq";

////////////////////////////////////////////////////////////////////////////////////////////////////////
public function __construct() {
	parent::__construct();
	// Load models here

	// Load libraries here

} // end constructor
////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 * CREATE
 */
////////////////////////////////////////////////////////////////////////////////////////////////////////
public function create_faq($package) {
	$this->db->insert($this->TABLE_FAQ, $package);

	$row = $this->get_faq_by_id($this->db->insert_id());
	if ( !$row->success )
		return $this->result(false, array("New FAQ was unable to be added."));

	return $this->result(true, array(), $row->data);
}
////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 * READ
 */
////////////////////////////////////////////////////////////////////////////////////////////////////////
public function get_faq_by_id($id) {
	$this->db->limit(1);
	$query = $this->db->get_where($this->TABLE_FAQ, array('id' => $id));

	if ( $query->num_rows() < 1 )
		return $this->result(false, array("No FAQ found with that identifier."));

	return $this->result(true, array(), $query->row());
}
public function get_faqs() {
	$this->db->order_by('order asc, id desc');
	$query = $this->db->get($this->TABLE_FAQ);

	if ( $query->num_rows() < 1 )
		return $this->result(false, array("No FAQ found."));

	return $this->result(true, array(), $query->result());
}
////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 * UPDATE
 */
////////////////////////////////////////////////////////////////////////////////////////////////////////
public function update_faq($id, $package) {
	$this->db->where('id', $id);
	$this->db->update($this->TABLE_FAQ, $package);

	$row = $this->get_faq_by_id($id);

	return $this->result(true, array(), $row->data);
}
////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 * DELETE
 */
////////////////////////////////////////////////////////////////////////////////////////////////////////
public function delete_faq_by_id($id) {
	$row = $this->get_faq_by_id($id);
	if ( !$row->success )
		return $this->result(false, array('No row with that ID found.'));

	$row = $row->data;

	$this->db->delete($this->TABLE_FAQ, array('id' => $id));

	$check_exists = $this->get_faq_by_id($id);
	if ( $check_exists->success )
		return $this->result(false, array('Row was unsuccessfully deleted.'));

	return $this->result(true, array(), $row);
}
////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 * UTILITY
 */
////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////
} // end class