<?php defined('BASEPATH') OR exit('No direct script access allowed');
////////////////////////////////////////////////////////////////////////////////////////////////////////
class Config extends EXT_Model  {
	private $TABLE_CONFIG			= "config";
////////////////////////////////////////////////////////////////////////////////////////////////////////
public function __construct() {
	parent::__construct();
} // end constructor
////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
**		CREATE
*/
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
**		READ
*/
////////////////////////////////////////////////////////////////////////////////////////////////////////
public function get_config($key_name) {
	$query = $this->db->limit(1)
		->get_where($this->TABLE_CONFIG, array('setting_key' => $key_name));

	if ( $query->num_rows() < 1 )
		return $this->result(false, array('No config matching the setting key: '.$key_name));

	return $this->result(true, array(), $query->row());
}
////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
**		UPDATE
*/
////////////////////////////////////////////////////////////////////////////////////////////////////////
public function set_config($key, $text='', $bool=FALSE) {
	$lookup = $this->get_config($key);
	if ( !$lookup->success )
		return $this->result(false, $lookup->messages);

	$package = array(
		'setting_text' => $text,
		'setting_boolean' => $bool
	);

	$id = $lookup->data->id;
	$this->db->where(array('id' => $id))
		->update($this->TABLE_CONFIG, $package);

	$result = $this->get_config($key);

	return $this->result(true, array(), $result->data);
}
////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
**		DELETE
*/
////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
**		Helpers/Utilities
*/
////////////////////////////////////////////////////////////////////////////////////////////////////////
public function in_maintenance() {
	$result = $this->get_config('maintenance');

	if ( !$result )
		return false;

	return $result->data->setting_boolean;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////
} // end class